/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SUSDStabilityPool,
  SUSDStabilityPoolInterface,
} from "../../contracts/SUSDStabilityPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_susd",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_validator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserInfo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_debt",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "_priceUpdateData",
        type: "bytes[]",
      },
    ],
    name: "liquidate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "offset",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "protectors",
    outputs: [
      {
        internalType: "bool",
        name: "isExist",
        type: "bool",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gainAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tracker",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTracker",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_trackerId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001cc738038062001cc78339818101604052810190620000379190620002c6565b336001600081905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b55760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000ac91906200031e565b60405180910390fd5b620000c6816200015160201b60201c565b5081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200033b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000249826200021c565b9050919050565b6200025b816200023c565b81146200026757600080fd5b50565b6000815190506200027b8162000250565b92915050565b60006200028e826200021c565b9050919050565b620002a08162000281565b8114620002ac57600080fd5b50565b600081519050620002c08162000295565b92915050565b60008060408385031215620002e057620002df62000217565b5b6000620002f0858286016200026a565b92505060206200030385828601620002af565b9150509250929050565b62000318816200023c565b82525050565b60006020820190506200033560008301846200030d565b92915050565b61197c806200034b6000396000f3fe6080604052600436106100a05760003560e01c8063b591955511610064578063b591955514610184578063b6b55f25146101a0578063d5556544146101c9578063ecf86bce146101f4578063f2fde38b14610231578063f52bccad1461025a576100a7565b80632e1a7d4d146100a95780636386c1c7146100c5578063715018a61461010257806387530d59146101195780638da5cb5b14610159576100a7565b366100a757005b005b6100c360048036038101906100be91906110bd565b610285565b005b3480156100d157600080fd5b506100ec60048036038101906100e79190611148565b6104df565b6040516100f99190611233565b60405180910390f35b34801561010e57600080fd5b50610117610619565b005b34801561012557600080fd5b50610140600480360381019061013b91906110bd565b61062d565b604051610150949392919061128e565b60405180910390f35b34801561016557600080fd5b5061016e61068a565b60405161017b91906112d3565b60405180910390f35b61019e60048036038101906101999190611353565b6106b4565b005b3480156101ac57600080fd5b506101c760048036038101906101c291906110bd565b610b1b565b005b3480156101d557600080fd5b506101de610e15565b6040516101eb91906113c7565b60405180910390f35b34801561020057600080fd5b5061021b600480360381019061021691906113e2565b610e1b565b60405161022891906113c7565b60405180910390f35b34801561023d57600080fd5b5061025860048036038101906102539190611148565b610e4c565b005b34801561026657600080fd5b5061026f610ed2565b60405161027c91906113c7565b60405180910390f35b61028d610ed8565b6006600082815260200190815260200160002060000160009054906101000a900460ff1615801561032057503373ffffffffffffffffffffffffffffffffffffffff166006600083815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561032a57600080fd5b600060066000838152602001908152602001600020600101549050600060066000848152602001908152602001600020600201549050600082111561043557600060066000858152602001908152602001600020600101819055506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b81526004016103e4929190611422565b6020604051808303816000875af1158015610403573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104279190611477565b90508061043357600080fd5b505b60008111156104d2576000600660008581526020019081526020016000206002018190555060003373ffffffffffffffffffffffffffffffffffffffff1682604051610480906114d5565b60006040518083038185875af1925050503d80600081146104bd576040519150601f19603f3d011682016040523d82523d6000602084013e6104c2565b606091505b50509050806104d057600080fd5b505b50506104dc610f1e565b50565b60606000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008167ffffffffffffffff811115610544576105436114ea565b5b6040519080825280602002602001820160405280156105725781602001602082028036833780820191505090505b50905060005b8281101561060e57600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106105d1576105d0611519565b5b90600052602060002001548282815181106105ef576105ee611519565b5b602002602001018181525050808061060690611577565b915050610578565b508092505050919050565b610621610f28565b61062b6000610faf565b565b60066020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905084565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161070f91906112d3565b602060405180830381865afa15801561072c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075091906115d4565b84111561075c57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518363ffffffff1660e01b81526004016107db929190611422565b6020604051808303816000875af11580156107fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081e9190611477565b50600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f121b1dc34878988886040518663ffffffff1660e01b81526004016108849493929190611785565b604080518083038185885af11580156108a1573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108c691906117c5565b9150915060006064604b836108db9190611805565b6108e59190611876565b905060003373ffffffffffffffffffffffffffffffffffffffff16828461090c91906118a7565b604051610918906114d5565b60006040518083038185875af1925050503d8060008114610955576040519150601f19603f3d011682016040523d82523d6000602084013e61095a565b606091505b505090508380156109685750805b15610b0c5760008060009050600060045490505b600554811015610afd576006600082815260200190815260200160002060010154836109a891906118db565b92508a831115610a65576006600082815260200190815260200160002060010154836109d491906118a7565b92508a85848d6109e491906118a7565b6109ee9190611805565b6109f89190611876565b600660008381526020019081526020016000206002016000828254610a1d91906118db565b92505081905550828b610a3091906118a7565b600660008381526020019081526020016000206001016000828254610a5591906118a7565b9250508190555060019150610adb565b8a856006600084815260200190815260200160002060010154610a889190611805565b610a929190611876565b600660008381526020019081526020016000206002016000828254610ab791906118db565b92505081905550600060066000838152602001908152602001600020600101819055505b8180610ae657508a83145b610afd578080610af590611577565b91505061097c565b80600481905550505050610b11565b600080fd5b5050505050505050565b610b23610ed8565b80600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610b7f91906112d3565b602060405180830381865afa158015610b9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc091906115d4565b1015610bcb57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610c2a9392919061190f565b6020604051808303816000875af1158015610c49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6d9190611477565b5060405180608001604052806001151581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001600081525060066000600554815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816001015560608201518160020155905050600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600554908060018154018082558091505060019003906000526020600020016000909190919091505560056000815480929190610db790611577565b91905055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c82604051610e0291906113c7565b60405180910390a2610e12610f1e565b50565b60045481565b60076020528160005260406000208181548110610e3757600080fd5b90600052602060002001600091509150505481565b610e54610f28565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ec65760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610ebd91906112d3565b60405180910390fd5b610ecf81610faf565b50565b60055481565b600260005403610f14576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6001600081905550565b610f30611075565b73ffffffffffffffffffffffffffffffffffffffff16610f4e61068a565b73ffffffffffffffffffffffffffffffffffffffff1614610fad57610f71611075565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610fa491906112d3565b60405180910390fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600080fd5b6000819050919050565b61109a81611087565b81146110a557600080fd5b50565b6000813590506110b781611091565b92915050565b6000602082840312156110d3576110d261107d565b5b60006110e1848285016110a8565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611115826110ea565b9050919050565b6111258161110a565b811461113057600080fd5b50565b6000813590506111428161111c565b92915050565b60006020828403121561115e5761115d61107d565b5b600061116c84828501611133565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6111aa81611087565b82525050565b60006111bc83836111a1565b60208301905092915050565b6000602082019050919050565b60006111e082611175565b6111ea8185611180565b93506111f583611191565b8060005b8381101561122657815161120d88826111b0565b9750611218836111c8565b9250506001810190506111f9565b5085935050505092915050565b6000602082019050818103600083015261124d81846111d5565b905092915050565b60008115159050919050565b61126a81611255565b82525050565b6112798161110a565b82525050565b61128881611087565b82525050565b60006080820190506112a36000830187611261565b6112b06020830186611270565b6112bd604083018561127f565b6112ca606083018461127f565b95945050505050565b60006020820190506112e86000830184611270565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611313576113126112ee565b5b8235905067ffffffffffffffff8111156113305761132f6112f3565b5b60208301915083602082028301111561134c5761134b6112f8565b5b9250929050565b6000806000806060858703121561136d5761136c61107d565b5b600061137b878288016110a8565b945050602061138c87828801611133565b935050604085013567ffffffffffffffff8111156113ad576113ac611082565b5b6113b9878288016112fd565b925092505092959194509250565b60006020820190506113dc600083018461127f565b92915050565b600080604083850312156113f9576113f861107d565b5b600061140785828601611133565b9250506020611418858286016110a8565b9150509250929050565b60006040820190506114376000830185611270565b611444602083018461127f565b9392505050565b61145481611255565b811461145f57600080fd5b50565b6000815190506114718161144b565b92915050565b60006020828403121561148d5761148c61107d565b5b600061149b84828501611462565b91505092915050565b600081905092915050565b50565b60006114bf6000836114a4565b91506114ca826114af565b600082019050919050565b60006114e0826114b2565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061158282611087565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036115b4576115b3611548565b5b600182019050919050565b6000815190506115ce81611091565b92915050565b6000602082840312156115ea576115e961107d565b5b60006115f8848285016115bf565b91505092915050565b600082825260208201905092915050565b6000819050919050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000611659838561161c565b935061166683858461162d565b61166f8361163c565b840190509392505050565b600061168784848461164d565b90509392505050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126116bc576116bb61169a565b5b83810192508235915060208301925067ffffffffffffffff8211156116e4576116e3611690565b5b6001820236038313156116fa576116f9611695565b5b509250929050565b6000602082019050919050565b600061171b8385611601565b93508360208402850161172d84611612565b8060005b87811015611773578484038952611748828461169f565b61175386828461167a565b955061175e84611702565b935060208b019a505050600181019050611731565b50829750879450505050509392505050565b600060608201905061179a6000830187611270565b6117a7602083018661127f565b81810360408301526117ba81848661170f565b905095945050505050565b600080604083850312156117dc576117db61107d565b5b60006117ea85828601611462565b92505060206117fb858286016115bf565b9150509250929050565b600061181082611087565b915061181b83611087565b925082820261182981611087565b915082820484148315176118405761183f611548565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061188182611087565b915061188c83611087565b92508261189c5761189b611847565b5b828204905092915050565b60006118b282611087565b91506118bd83611087565b92508282039050818111156118d5576118d4611548565b5b92915050565b60006118e682611087565b91506118f183611087565b925082820190508082111561190957611908611548565b5b92915050565b60006060820190506119246000830186611270565b6119316020830185611270565b61193e604083018461127f565b94935050505056fea264697066735822122013360d247263bd13d060a5a66b0435a83b64041dc758c93f003ae06d9120ac9d64736f6c63430008140033";

type SUSDStabilityPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SUSDStabilityPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SUSDStabilityPool__factory extends ContractFactory {
  constructor(...args: SUSDStabilityPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _susd: AddressLike,
    _validator: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_susd, _validator, overrides || {});
  }
  override deploy(
    _susd: AddressLike,
    _validator: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_susd, _validator, overrides || {}) as Promise<
      SUSDStabilityPool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SUSDStabilityPool__factory {
    return super.connect(runner) as SUSDStabilityPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SUSDStabilityPoolInterface {
    return new Interface(_abi) as SUSDStabilityPoolInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SUSDStabilityPool {
    return new Contract(address, _abi, runner) as unknown as SUSDStabilityPool;
  }
}
